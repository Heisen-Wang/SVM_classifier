from Features_extractor import features, train_testfrom Data_reading import data_read,array_to_regularfrom sklearn.externals import joblibfrom test import localization#import seaborn as snsfrom plot import pair_plot, plot_histimport numpy as npimport matplotlib.pyplot as pltfrom keras.models import load_modelimport pandas as pd# read the data, sensor position and target positionsdata_train = pd.read_pickle('./data/data_train')data_test = pd.read_pickle('./data/data_test')# load model and scalermodel = load_model("nn.h5")scaler = joblib.load('scaler.save')# make prediction on test dataX_train, y_train, X_test, y_test = train_test(data_train, data_test)y_pred = model.predict(X_test)# error calculationerror = np.ravel(scaler.inverse_transform(y_pred))-np.ravel(scaler.inverse_transform(y_test))b_est = scaler.inverse_transform(y_pred)array_to_regular(data_test, b_est)# location#x, rmes_sum, rmes = localization(test, sensor_test, target_test, b)# error plot#plot_hist(error)#plt.show()